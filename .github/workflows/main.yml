name: Star Cycle Forever ♡～

# 每小时触发一次，脚本内根据当前星标状态决定操作喵～
on:
  schedule:
    - cron: '0 * * * *'   # 每小时整点运行一次
  workflow_dispatch:
    # 添加手动触发时的输入参数
    inputs:
      force_unstar:
        description: '强制执行取消星标操作（true/false）'
        required: false
        default: 'false'
        type: boolean

jobs:
  star-unstar-loop:
    runs-on: ubuntu-latest
    env:
      TARGET_OWNER: advent259141
      TARGET_REPO: astrbot_plugin_SessionFaker
      PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      # 控制周期长度：加星持续72小时，取消星标持续1小时
      STAR_PERIOD_HOURS: 72
      UNSTAR_PERIOD_HOURS: 1
      FORCE_UNSTAR: ${{ github.event.inputs.force_unstar || 'false' }}

    steps:
      - name: 检查 Token 有效性喵～
        run: |
          echo "== 请求用户信息 ==" 
          curl -i -H "Authorization: token $PERSONAL_TOKEN" \
               -H "Accept: application/vnd.github+json" \
               https://api.github.com/user

      - name: 检查当前星标状态并决定操作喵～
        run: |
          echo "检查当前是否已加星喵～"
          # 检查当前星标状态
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token $PERSONAL_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/user/starred/$TARGET_OWNER/$TARGET_REPO)
          
          # 如果当前没有加星 (404) 或者不确定 (非204)
          if [ "$STATUS" != "204" ]; then
            echo "当前状态：未加星（状态码：$STATUS），执行加星操作喵～"
            CODE=$(curl -s -o /dev/null -w "%{http_code}" \
              -X PUT \
              -H "Authorization: token $PERSONAL_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/user/starred/$TARGET_OWNER/$TARGET_REPO)

            if [ "$CODE" = "204" ]; then
              echo "Star 成功喵♡～"
              # 记录加星时间
              echo "STAR_TIME=$(date +%s)" >> $GITHUB_ENV
            else
              echo "Star 失败喵… 返回码：$CODE"
            fi
          else
            echo "当前状态：已加星，检查是否需要取消星标喵～"
            
            # 获取最近操作记录以决定是否取消星标
            REPO_ACTIVITY=$(curl -s \
              -H "Authorization: token $PERSONAL_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/users/$TARGET_OWNER/starred?per_page=100")
            
            # 检查当前时间戳
            NOW=$(date +%s)
            # 从仓库活动获取最后一次加星时间戳（通常最近的活动）
            # 简化版本：如果已经加星超过72小时，就取消星标
            # 因为无法精确获取加星时间，我们每24小时有约1/3概率取消星标
            # 这样确保不会长时间保持星标状态
            
            # 检查是否强制执行取消星标
            if [ "$FORCE_UNSTAR" = "true" ]; then
              echo "强制执行取消星标操作喵～"
              SHOULD_UNSTAR=true
            else
              # 原有的随机逻辑
              RANDOM_NUM=$((RANDOM % 3))  # 生成0-2之间的随机数
              if [ "$RANDOM_NUM" = "0" ]; then
                echo "随机触发取消星标操作喵～"
                SHOULD_UNSTAR=true
              else
                SHOULD_UNSTAR=false
              fi
            fi
            
            if [ "$SHOULD_UNSTAR" = "true" ]; then
              CODE=$(curl -s -o /dev/null -w "%{http_code}" \
                -X DELETE \
                -H "Authorization: token $PERSONAL_TOKEN" \
                -H "Accept: application/vnd.github+json" \
                https://api.github.com/user/starred/$TARGET_OWNER/$TARGET_REPO)
              
              if [ "$CODE" = "204" ]; then
                echo "Unstar 成功喵♡～"
              else
                echo "Unstar 失败喵… 返回码：$CODE"
              fi
            else
              if [ "$FORCE_UNSTAR" = "true" ]; then
                echo "强制执行取消星标被设置，但是没有执行操作喵～"
              else
                echo "继续保持星标状态喵～ (随机值：$RANDOM_NUM)"
              fi
            fi
          fi
